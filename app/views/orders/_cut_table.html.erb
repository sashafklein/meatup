<br>
<table class="table table-condensed order-table">
  
  <tr style="border:#fff;">
    <th>Cut</th>
    <th>Prep Requests</th>
    <th>Packages</th>
    <th>Package Weight</th>
    <th>Price/lb</th>
    <th>Lbs</th>
    <th>Price</th>
    <th>Savings</th>
  </tr>

  <% @unordered = Cut.where(:animal_type => @meat) %>
  <% @cutlist = @unordered.find(:all, :order => 'savings DESC')%>
  <% @b = @order_animal.butcher %>

  <% @cutlist.each do |c| %>

    <%= @f.fields_for :lines do |l| %>

      <% all_ps = @order_animal.packages %>  
      <% cut_packages = all_ps.where(:cut_id => c.id) %>
      <% sold = cut_packages.where(:sold => true).length %>
      <% unsold = cut_packages.where(:sold => false).length %>
      <% example = cut_packages.first %>

      <!-- ROW LINE - Only if the cut exists (ex, no hanger) -->
      <% unless cut_packages.length == 0 %>

        <tr> <%= l.hidden_field :cut_id, value: c.id %>

          <td><div id="cut_name"><%= c.name %></div></td>

          <!-- Prep Requests -->
          <% @prep_array = [["None", ""]] %>
          <% prep_helper(c) %>
          <% if @prep_array[0] != "" %>
            <td><%= l.select :notes, @prep_array %></td>
          <% else %>
            <td></td>
          <% end %>
          
          <!-- Package drop-down with sold-out special case -->
          <% dropdown = (0..unsold).to_a %>
          <% if dropdown.length <= 1 %>
            <td class="red">
              <span>
                SOLD OUT
              </span>
            </td>
          <%= l.hidden_field :units, value: 0 %>
          <% else %>
            <td>
                <%= l.select :units, dropdown, {}, :class => "unit_select js-package" %>
            </td>
          <% end %>

           <td><span class="js-weight" data-weight=<%= c.package_weight %>><%= c.package_weight %> lb</span></td>

          <!-- Price/LB with JS calc functionality -->
          <td>
            <span class="js-lb-price" data-lb-price=<%= example.price %>>
              <%= number_to_currency(example.price) %>
            </span>
          </td>

          <!-- JS-Calculated Totals -->
          <td class="js-lbs"></td>
          <td class="js-price"></td>

          <!-- Package-specific savings -->
          <% if ((c.comp - example.price) / c.comp) > 0.01 %>
            <td class="savings"><%= number_to_percentage(100 * ((c.comp - example.price) / c.comp), :precision => 0) %></td>
          <% else %>
            <td class="savings"><%= number_to_percentage(0, :precision => 0) %></td>
          <% end %>
        </tr>
      <% end %>

    <% end %> <!-- End of Cuts Block -->
  <% end %> <!-- End of Lines Block -->
      <tr>
        <td colspan=5>
        </td>
        <td>LBS
        </td>
        <td>COST TOTAL
        </td>
        <td>SAVINGS CACL'D
        </td>
      </tr>

</table>